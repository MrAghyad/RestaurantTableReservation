<?php

namespace App\Http\Controllers;

use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Foundation\Bus\DispatchesJobs;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Routing\Controller as BaseController;
use Tymon\JWTAuth\Facades\JWTAuth;

/**
 * @group Controller
 *
 * Used as base class for all controllers in the system
 */
class Controller extends BaseController
{
    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;

    /**
	 * Check if a user is authenticated
	 */
    public function checkAuthenticate()
    {
        //get authenticated user
        $user = JWTAuth::user();

        //in case no user was authenticated, a 401 msg is returned
        if($user == null)
        {
            return response()->json(['msg'=>'Not authenticated'],401);
        }

        //if an authenticated user was found return null
        return null;
    }

    /**
	 * Check if an authenticated user is Admin
	 */
    public function checkAuthenticatedAdmin()
    {
        //check if user is authenticated
        $checkAuthenticate = $this->checkAuthenticate();

        // if not, return response generated by checkAuthenticate function
        if($checkAuthenticate != null)
        {
            return $checkAuthenticate;
        }
        else
        {
            //if an authenticated user was found, get that user
            $user = JWTAuth::user();

            //if user is not admin (i.e. not authorized), return a negative response with 401 status
            if($user->role != "admin")
            {
                return response()->json(['msg'=>'Unauthorized user'],401);
            }
        }

        //return null in case user was authenticated and Admin
        return null;
    }
}
